<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{2218FF81-4477-3E12-869B-5311A23B5B94}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>neckGraphics</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\bin\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">neckGraphics.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">neckGraphics</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">neckGraphics.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">neckGraphics</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">neckGraphics.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">neckGraphics</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">neckGraphics.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">neckGraphics</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;GLEW_STATIC;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;GLEW_STATIC;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\engine\core\Debug\core.lib;..\..\engine\render\Debug\render.lib;..\..\engine\core\Debug\core.lib;..\..\engine\render\Debug\render.lib;..\..\exts\glew\Debug\glew.lib;..\..\exts\glfw\src\Debug\glfw3.lib;..\..\exts\Debug\imgui.lib;..\..\exts\Debug\nanovg.lib;..\..\exts\Debug\imgui.lib;..\..\exts\Debug\nanovg.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/Debug/neckGraphics.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/bin/neckGraphics.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\engine\core\Release\core.lib;..\..\engine\render\Release\render.lib;..\..\engine\core\Release\core.lib;..\..\engine\render\Release\render.lib;..\..\exts\glew\Release\glew.lib;..\..\exts\glfw\src\Release\glfw3.lib;..\..\exts\Release\imgui.lib;..\..\exts\Release\nanovg.lib;..\..\exts\Release\imgui.lib;..\..\exts\Release\nanovg.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/Release/neckGraphics.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/neckGraphics.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\engine\core\MinSizeRel\core.lib;..\..\engine\render\MinSizeRel\render.lib;..\..\engine\core\MinSizeRel\core.lib;..\..\engine\render\MinSizeRel\render.lib;..\..\exts\glew\MinSizeRel\glew.lib;..\..\exts\glfw\src\MinSizeRel\glfw3.lib;..\..\exts\MinSizeRel\imgui.lib;..\..\exts\MinSizeRel\nanovg.lib;..\..\exts\MinSizeRel\imgui.lib;..\..\exts\MinSizeRel\nanovg.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/MinSizeRel/neckGraphics.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/neckGraphics.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;GLEW_STATIC;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\engine;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glew\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\glfw\include;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\imgui\examples\opengl3_example;D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\exts\nanovg\src;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\engine\core\RelWithDebInfo\core.lib;..\..\engine\render\RelWithDebInfo\render.lib;..\..\engine\core\RelWithDebInfo\core.lib;..\..\engine\render\RelWithDebInfo\render.lib;..\..\exts\glew\RelWithDebInfo\glew.lib;..\..\exts\glfw\src\RelWithDebInfo\glfw3.lib;..\..\exts\RelWithDebInfo\imgui.lib;..\..\exts\RelWithDebInfo\nanovg.lib;..\..\exts\RelWithDebInfo\imgui.lib;..\..\exts\RelWithDebInfo\nanovg.lib;opengl32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/RelWithDebInfo/neckGraphics.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/neckGraphics.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/projects/neckGraphics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020 -BD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD --check-stamp-file D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/projects/neckGraphics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020 -BD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD --check-stamp-file D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/projects/neckGraphics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020 -BD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD --check-stamp-file D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/projects/neckGraphics/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020 -BD:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD --check-stamp-file D:/GitHubUniversity/RTG_S0006E/RTG_S0006E/2020/BUILD/projects/neckGraphics/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\projects\neckGraphics\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Light.h" />
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Mesh.h" />
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Renderer.h" />
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Shader.h" />
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Texture.h" />
    <ClInclude Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\exampleapp.h" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Light.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Mesh.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Renderer.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Shader.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\Texture.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\exampleapp.cc" />
    <ClCompile Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\projects\neckGraphics\code\main.cc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\ZERO_CHECK.vcxproj">
      <Project>{EE4FA1F4-7740-3E66-8540-631D7BE763B1}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\engine\core\core.vcxproj">
      <Project>{6636E343-8532-360A-A775-1F313A5C81ED}</Project>
      <Name>core</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\exts\glew\glew.vcxproj">
      <Project>{A15EDE70-BF24-3823-85C8-CA4DA61D953F}</Project>
      <Name>glew</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\exts\glfw\src\glfw.vcxproj">
      <Project>{27994755-0028-39E9-8EB8-CB5E899E0EBE}</Project>
      <Name>glfw</Name>
    </ProjectReference>
    <ProjectReference Include="D:\GitHubUniversity\RTG_S0006E\RTG_S0006E\2020\BUILD\exts\nanovg.vcxproj">
      <Project>{9D0BDDCF-2CDB-3155-8A87-8454EB7E359E}</Project>
      <Name>nanovg</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>